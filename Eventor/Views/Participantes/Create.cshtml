@model Eventor.Models.App.Participante

@{
    ViewBag.Title = "Invitar";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.Hidden("EventoId", (int)ViewBag.EventoId)
        @Html.Hidden("Estado", (int)0)
        <br />
        <div class="well">
            <div class="row">
                <div class="col-md-6">
                    <h3><strong>@ViewBag.NombreEvento - Participantes</strong></h3>
                </div>
                <div class="col-md-6">
                    <div class="btn-group btn-group-lg pull-right">
                        <input type="submit" value="¡Invitar!" class="btn btn-lg btn-primary" />
                        @Html.ActionLink("Volver", "Index", new { @id = ViewContext.RouteData.Values["id"]}, new { @class = "btn btn-default" })
                    </div>

                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4>Nuevo invitado<span class="glyphicon glyphicon-user pull-right"></span></h4>
                </div>
                <div class="panel-body">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                </div>
            </div>
        </div>


    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
